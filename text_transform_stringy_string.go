// Code generated by "stringer -type=_TextConvertTo -nametransform=snake_case_lower -trimprefix=_TextConvertTo -output=text_transform_stringy_string.go -genfromstringfn=true -linecomment=true"; DO NOT EDIT.

package main

import "strconv"
import "errors"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[_TextConvertToNone-0]
	_ = x[_TextConvertToLower-1]
	_ = x[_TextConvertToUpper-2]
	_ = x[_TextConvertToCamelCase-3]
	_ = x[_TextConvertToSnakeCase-4]
	_ = x[_TextConvertToKebabCase-5]
	_ = x[_TextConvertToCamelCaseLower-6]
	_ = x[_TextConvertToSnakeCaseLower-7]
	_ = x[_TextConvertToKebabCaseLower-8]
	_ = x[_TextConvertToCamelCaseUpper-9]
	_ = x[_TextConvertToSnakeCaseUpper-10]
	_ = x[_TextConvertToKebabCaseUpper-11]
}

const __TextConvertTo_name = "noneloweruppercamel_casesnake_casekebab_casecamel_case_lowersnake_case_lowerkebab_case_lowercamel_case_uppersnake_case_upperkebab_case_upper"

var __TextConvertTo_index = [...]uint8{0, 4, 9, 14, 24, 34, 44, 60, 76, 92, 108, 124, 140}

func (i _TextConvertTo) String() string {
	if i < 0 || i >= _TextConvertTo(len(__TextConvertTo_index)-1) {
		return "_TextConvertTo(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return __TextConvertTo_name[__TextConvertTo_index[i]:__TextConvertTo_index[i+1]]
}
func _TextConvertToFromString(s string) (_TextConvertTo, error) {
	for i := 0; i < 12; i++ {
		if e := _TextConvertTo(i + 0); s == e.String() {
			return e, nil
		}
	}
	return _TextConvertTo(0), errors.New("cannot deternime _TextConvertTo from string")
}
